# EditorConfig helps developers define and
# maintain consistent coding styles between
# different editors and IDEs

# http://EditorConfig.org

# top-most EditorConfig file
root = true

[*]
indent_style = space
indent_size = 4
insert_final_newline = true
# charset = utf-8 # VS2017 misinterprets as utf-8-bom https://developercommunity.visualstudio.com/content/problem/22922

[*.{proj,csproj,vcxproj,xproj,json,config,nuspec,xml}]
indent_size = 2



[*]
# https://github.com/nunit/docs/wiki/Coding-Standards#namespace-class-structure-interface-enumeration-and-method-definitions
csharp_indent_braces = true
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true

# https://github.com/nunit/docs/wiki/Coding-Standards#spaces
csharp_space_after_cast = false
csharp_space_after_comma = true
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = do_not_ignore
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = none
csharp_space_between_square_brackets = false

# https://github.com/nunit/docs/wiki/Coding-Standards#indentation
csharp_indent_block_contents = true
csharp_indent_case_contents = true
csharp_indent_switch_labels = true

# https://github.com/nunit/docs/wiki/Coding-Standards#naming
dotnet_style_predefined_type_for_locals_parameters_members = true:error
dotnet_style_predefined_type_for_member_access = true:error
dotnet_style_qualification_for_field = false:error

dotnet_naming_style.pascal_case.capitalization = pascal_case
dotnet_naming_symbols.non_interface_types.applicable_kinds = class,struct,enum,delegate
dotnet_naming_symbols.methods.applicable_kinds = method
dotnet_naming_symbols.properties.applicable_kinds = property
dotnet_naming_symbols.public_fields.applicable_kinds = field
dotnet_naming_symbols.public_fields.applicable_accessibilities = public

# dotnet_naming_rule.*.symbols does not yet support commas without buggy behavior
dotnet_naming_rule.non_interface_types.severity = error
dotnet_naming_rule.non_interface_types.symbols = non_interface_types
dotnet_naming_rule.non_interface_types.style = pascal_case
dotnet_naming_rule.methods.severity = error
dotnet_naming_rule.methods.symbols = methods
dotnet_naming_rule.methods.style = pascal_case
dotnet_naming_rule.properties.severity = error
dotnet_naming_rule.properties.symbols = properties
dotnet_naming_rule.properties.style = pascal_case
dotnet_naming_rule.public_fields.severity = error
dotnet_naming_rule.public_fields.symbols = public_fields
dotnet_naming_rule.public_fields.style = pascal_case

dotnet_naming_style.interface.capitalization = pascal_case
dotnet_naming_style.interface.required_prefix = I
dotnet_naming_symbols.interfaces.applicable_kinds = interface
dotnet_naming_rule.interface.severity = error
dotnet_naming_rule.interface.symbols = interfaces
dotnet_naming_rule.interface.style = interface

dotnet_naming_style.underscore_camel_case.capitalization = camel_case
dotnet_naming_style.underscore_camel_case.required_prefix = _
dotnet_naming_symbols.non_public_fields.applicable_kinds = field
dotnet_naming_symbols.non_public_fields.applicable_accessibilities = internal,friend,private,protected,protected_internal,protected_friend
dotnet_naming_rule.underscore_camel_case.severity = error
dotnet_naming_rule.underscore_camel_case.symbols = non_public_fields
dotnet_naming_rule.underscore_camel_case.style = underscore_camel_case

dotnet_naming_style.camel_case.capitalization = camel_case
dotnet_naming_symbols.parameters.applicable_kinds = parameter
dotnet_naming_rule.camel_case.severity = error
dotnet_naming_rule.camel_case.symbols = parameters
dotnet_naming_rule.camel_case.style = camel_case

# https://github.com/nunit/docs/wiki/Coding-Standards#file-organization
dotnet_sort_system_directives_first = true

# https://github.com/nunit/docs/wiki/Coding-Standards#use-of-the-var-keyword
csharp_style_var_when_type_is_apparent = true:error
